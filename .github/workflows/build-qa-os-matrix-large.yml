name: Build QA - OS Matrix (Large)



on:
  workflow_dispatch:

  push:
    branches:
      - master
    tags:
      - '*'
    paths-ignore:
      - '.github/*.md'
      - '.github/workflows/**'
      - '.gitignore'
      - 'ChangeLog'
      - 'COPYING'
      - 'configure.scan'
      - 'contrib/**'
      - 'dev-tools/**'
      - '!dev-tools/libexec/get-release-*.sh'
      - 'doc/**'
      - 'etc/**'
      - 'install/**'
      - 'lib/*/IMPORT.defs'
      - 'lib/*/LICENSE'
      - 'README.md'



jobs:
  build-qa-os-matrix-large:

    name: Build on ${{matrix.container}}
    runs-on: ubuntu-20.04



    ### Define the list of container images
    #
    container: ${{ matrix.container }}
    strategy:
      matrix:
        container:
          - archlinux:base-devel

          #- centos:6   # Cannot test this one due to non-working actions/checkout@v2 on CentOS 6 (incompatible glibc version)
          - centos:7
          - centos:8

          - debian:stretch
          - debian:buster
          - debian:bullseye
          - debian:sid

          - opensuse/leap:15.1
          - opensuse/leap:15.2
          - opensuse/tumbleweed:latest

          - ubuntu:16.04
          - ubuntu:18.04
          - ubuntu:20.04
          - ubuntu:rolling



    ###
    ### Steps to run
    ###
    steps:



      ### Install requirements for the subsequent checkout action
      #

      # Arch
      - run: pacman -Syu --noconfirm git
        if: ${{ startsWith(matrix.container, 'archlinux:') }}

      # Debian / Ubuntu
      - run: |
          DEBIAN_FRONTEND=noninteractive apt-get update -y
          DEBIAN_FRONTEND=noninteractive apt-get install -y git
        if: ${{ startsWith(matrix.container, 'debian:') || startsWith(matrix.container, 'ubuntu:') }}

      # RedHat / CentOS
      - run: yum install -y git
        if: ${{ startsWith(matrix.container, 'centos:') }}

      # SUSE / OpenSUSE
      - run: zypper -n install git
        if: ${{ startsWith(matrix.container, 'opensuse/') }}



      ### Fetch the code
      #
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0



      ### Build
      #
      - run: ./dev-tools/install-dev-software.sh
      - run: ./bootstrap.sh
      - run: ./configure --enable-everything
      - run: make -j4
      - run: make -j4 check

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: tests-directory
          path: tests/
